-- Automatically generated by ForSyDe
library forsyde;
library ieee;
use forsyde.types.all;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
library aluProc_lib;
use aluProc_lib.types.all;


entity \mux41Proc\ is
     port (\sel\ : in fsvec_2_std_logic;
           \d3\ : in fsvec_4_std_logic;
           \d2\ : in fsvec_4_std_logic;
           \d1\ : in fsvec_4_std_logic;
           \d0\ : in fsvec_4_std_logic;
           \out\ : out fsvec_4_std_logic);
end entity \mux41Proc\;


architecture synthesizable of \mux41Proc\ is
     signal \mux41_out\ : fsvec_4_std_logic;
begin
     \mux41\ : block
          port (\mux41_in1\ : in fsvec_2_std_logic;
                \mux41_in2\ : in fsvec_4_std_logic;
                \mux41_in3\ : in fsvec_4_std_logic;
                \mux41_in4\ : in fsvec_4_std_logic;
                \mux41_in5\ : in fsvec_4_std_logic;
                \mux41_out\ : out fsvec_4_std_logic);
          port map (\mux41_in1\ => \sel\,
                    \mux41_in2\ => \d3\,
                    \mux41_in3\ => \d2\,
                    \mux41_in4\ => \d1\,
                    \mux41_in5\ => \d0\,
                    \mux41_out\ => \mux41_out\);
          function \mux41Fun\ (\sel\ : fsvec_2_std_logic;
                               \x3\ : fsvec_4_std_logic;
                               \x2\ : fsvec_4_std_logic;
                               \x1\ : fsvec_4_std_logic;
                               \x0\ : fsvec_4_std_logic)
                              return fsvec_4_std_logic is
          begin
               if \sel\ = plusgt('1', plusgt('1', empty)) then
                    return \x3\;
               else
                    if \sel\ = plusgt('1', plusgt('0', empty)) then
                         return \x2\;
                    else
                         if \sel\ = plusgt('0', plusgt('1', empty)) then
                              return \x1\;
                         else
                              return \x0\;
                         end if;
                    end if;
               end if;
          end;
     begin
          \mux41_out\ <= \mux41Fun\(\sel\ => \sel\,
                                    \x3\ => \d3\,
                                    \x2\ => \d2\,
                                    \x1\ => \d1\,
                                    \x0\ => \d0\);
     end block \mux41\;
     
     \out\ <= \mux41_out\;
end architecture synthesizable;
