-- Automatically generated by ForSyDe
library forsyde;
library ieee;
use forsyde.types.all;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
library aluProc_lib;
use aluProc_lib.types.all;


entity \or4BitProc\ is
     port (\a\ : in fsvec_4_std_logic;
           \b\ : in fsvec_4_std_logic;
           \y\ : out fsvec_4_std_logic);
end entity \or4BitProc\;


architecture synthesizable of \or4BitProc\ is
     signal \or4_out\ : fsvec_4_std_logic;
begin
     \or4\ : block
          port (\or4_in1\ : in fsvec_4_std_logic;
                \or4_in2\ : in fsvec_4_std_logic;
                \or4_out\ : out fsvec_4_std_logic);
          port map (\or4_in1\ => \a\,
                    \or4_in2\ => \b\,
                    \or4_out\ => \or4_out\);
          function \or4BitFun\ (\a\ : fsvec_4_std_logic;
                                \b\ : fsvec_4_std_logic)
                               return fsvec_4_std_logic is
          begin
               return plusgt(ex(\a\, 3) or ex(\b\, 3),
                             plusgt(ex(\a\, 2) or ex(\b\, 2),
                                    plusgt(ex(\a\, 1) or ex(\b\, 1),
                                           plusgt(ex(\a\, 0) or ex(\b\, 0),
                                                  empty))));
          end;
     begin
          \or4_out\ <= \or4BitFun\(\a\ => \a\, \b\ => \b\);
     end block \or4\;
     
     \y\ <= \or4_out\;
end architecture synthesizable;
